blogs = [{
        "header": "Building a cross-account CI/CD pipeline for single-tenant SaaS solutions",
        "body": '<p>With the increasing demand from enterprise customers for a pay-as-you-go consumption model, more and more independent software vendors (ISVs) are shifting their business model towards software as a service (SaaS). Usually this kind of solution    is architected using a multi-tenant model. It means that the infrastructure resources and applications are shared across multiple customers, with mechanisms in place to isolate their environments from each other. However, you may not want    or can’t afford to share resources for security or compliance reasons, so you need a single-tenant environment.</p><p>To achieve this higher level of segregation across the tenants, it’s recommended to isolate the environments on the AWS account level. This strategy brings benefits, such as no network overlapping, no account limits sharing, and simplified    usage tracking and billing, but it comes with challenges from an operational standpoint. Whereas multi-tenant solutions require management of a single shared production environment, single-tenant installations consist of dedicated production    environments for each customer, without any shared resources across the tenants. When the number of tenants starts to grow, delivering new features at a rapid pace becomes harder to accomplish, because each new version needs to be manually    deployed on each tenant environment.</p><p>This post describes how to automate this deployment process to deliver software quickly, securely, and less error-prone for each existing tenant. I demonstrate all the steps to build and configure a CI/CD pipeline using <a href="http://aws.amazon.com/codecommit">AWS CodeCommit</a>,    <a href="http://aws.amazon.com/codepipeline">AWS CodePipeline</a>, <a href="http://aws.amazon.com/codebuild">AWS CodeBuild</a>, and <a href="http://aws.amazon.com/cloudformation">AWS CloudFormation</a>. For each new version, the pipeline    automatically deploys the same application version on the multiple tenant AWS accounts.</p><p>There are different caveats to build such cross-account CI/CD pipelines on AWS. Because of that, I use <a href="http://aws.amazon.com/cli">AWS Command Line Interface</a> (AWS CLI) to manually go through the process and demonstrate in detail    the various configuration aspects you have to handle, such as artifact encryption, cross-account permission granting, and pipeline actions.</p><h2>Single-tenancy vs. multi-tenancy</h2><p>One of the first aspects to consider when architecting your SaaS solution is its tenancy model. Each brings their own benefits and architectural challenges. On multi-tenant installations, each customer shares the same set of resources, including    databases and applications. With this mode, you can use the servers’ capacity more efficiently, which generally leads to significant cost-saving opportunities. On the other hand, you have to carefully secure your solution to prevent a    customer from accessing sensitive data from another. Designing for high availability becomes even more critical on multi-tenant workloads, because more customers are affected in the event of downtime.</p><p>Because the environments are by definition isolated from each other, single-tenant solutions are simpler to design when it comes to security, networking isolation, and data segregation. Likewise, you can customize the applications per customer,    and have different versions for specific tenants. You also have the advantage of eliminating the noisy-neighbor effect, and can plan the infrastructure for the customer’s scalability requirements. As a drawback, in comparison with multi-tenant,   the single-tenant model is operationally more complex because you have more servers and applications to maintain.</p><p>Which tenancy model to choose depends ultimately on whether you can meet your customer needs. They might have specific governance requirements, be bound to a certain industry regulation, or have compliance criteria that influences which model    they can choose. For more information about modeling your SaaS solutions, see <a href="https://aws.amazon.com/partners/saas-on-aws/">SaaS on AWS</a>.</p>',
        "author": "Rafael Ramos",
        "url": "aws-blog",
        "logo": "lambda.png",
        "comments": [{
                "userName": "Akshay",
                "comment": "Hello"
            },
            {
                "userName": "Mike",
                "comment": "Hi"
            }
        ]
    },
    {
        "header": "Automated Response and Remediation with AWS Security Hub",
        "body": '<p><a href="https://aws.amazon.com/security-hub/features/" target="_blank" rel="noopener noreferrer">AWS Security Hub</a> is a service that gives you aggregated visibility into your security and compliance status across multiple AWS accounts.        In addition to consuming findings from Amazon services and integrated partners, Security Hub gives you the option to create custom actions, which allow a customer to manually invoke a specific response or remediation action on a specific finding. You can send custom actions to <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/WhatIsCloudWatchEvents.html" target="_blank" rel="noopener noreferrer">Amazon CloudWatch Events</a> as a specific <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html" target="_blank" rel="noopener noreferrer">event pattern</a>,        allowing you to create a CloudWatch Events <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/Create-CloudWatch-Events-Rule.html" target="_blank" rel="noopener noreferrer">rule</a> that listens for these actions and sends        them to a target service, such as a <a href="https://aws.amazon.com/lambda/" target="_blank" rel="noopener noreferrer">Lambda function</a> or <a href="https://aws.amazon.com/sqs/" target="_blank" rel="noopener noreferrer">Amazon SQS queue</a>.</p>    <p>By creating custom actions mapped to specific finding type and by developing a corresponding Lambda function for that custom action, you can achieve targeted, automated remediation for these findings. This allows a customer to specifically        decide if he or she wants to invoke a remediation action on a specific finding. A customer can also use these Lambda functions as the target of fully automated remediation actions that do not require any human review.</p>    <p>In this blog post, I’ll show you how to build custom actions, CloudWatch Event rules, and Lambda functions for a dozen targeted actions that can help you remediate <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards.html" target="_blank" rel="noopener noreferrer">CIS AWS Foundations Benchmark</a>-related compliance findings. I’ll also cover use cases for sending findings to an issue management system and for automating security patching. To promote rapid        deployment and adoption of this solution, you’ll deploy a majority of the necessary components via <a href="https://aws.amazon.com/cloudformation/" target="_blank" rel="noopener noreferrer">AWS CloudFormation</a>.</p>    <p><strong>Note</strong>: The <a href="https://github.com/aws-samples/aws-security-hub-response-and-remediation" target="_blank" rel="noopener noreferrer">full repository</a> for current and future response and remediation templates is hosted        on GitHub and includes additional technical guidance for expanding the solution provided in this post.</p>    <h3>Solution Architecture</h3>    <div id="attachment_12404" style="width: 810px" class="wp-caption aligncenter">        <img aria-describedby="caption-attachment-12404" class="size-full wp-image-12404" src="https://d2908q01vomqb2.cloudfront.net/22d200f8670dbdb3e253a90eee5098477c95c23d/2020/01/25/SOARToday-figure-01.png" alt="Figure 1 - Solution Architecture Overview" width="800" height="235">        <p id="caption-attachment-12404" class="wp-caption-text">Figure 1 – Solution Architecture Overview</p>    </div>    <ol>        <li>Integrated services send their findings to Security Hub.</li>        <li>From the Security Hub console, you’ll choose a custom action for a finding. Each custom action is then emitted as a CloudWatch Event.</li>        <li>The CloudWatch Event rule triggers a Lambda function. This function is mapped to a custom action based on the custom action’s ARN.</li>        <li>Dependent on the particular rule, the Lambda function that is invoked will perform a remediation action on your behalf.</li>    </ol>    <p>For the purpose of this blog post, I’ll refer to the end-to-end combination of a custom action, a CloudWatch Event rule, a Lambda function, plus any supporting services needed to perform a specific action as a “playbook.” To demonstrate how        a remediation solution works end-to-end, I’ll show you how to build your first playbook manually. You’ll deploy the remainder of the playbooks via CloudFormation.</p>    <p>I’ll also show you how to modify four of the playbooks (three of which are appended by an asterisk), as they use AWS Lambda <a href="https://docs.aws.amazon.com/lambda/latest/dg/env_variables.html" target="_blank" rel="noopener noreferrer">environment variables</a>                to perform their actions, we’ll walk through populating these later.</p>    <p>Based on feedback from Security Hub customers, the following controls from the CIS AWS Foundations Benchmark will be supported by this blog post:</p>    <ul>        <li><a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cis-controls.html#securityhub-cis-controls-1.3" target="_blank" rel="noopener noreferrer">1.3</a> – “Ensure credentials unused for 90 days or greater are disabled”</li>        <li><a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cis-controls.html#securityhub-cis-controls-1.4" target="_blank" rel="noopener noreferrer">1.4</a> – “Ensure access keys are rotated every 90 days or less”</li>        <li><a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cis-controls.html#securityhub-cis-controls-1.5" target="_blank" rel="noopener noreferrer">1.5</a> – “Ensure IAM password policy requires at least one uppercase            letter”        </li>        <li><a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cis-controls.html#securityhub-cis-controls-1.6" target="_blank" rel="noopener noreferrer">1.6</a> – “Ensure IAM password policy requires at least one lowercase            letter”        </li>        <li><a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cis-controls.html#securityhub-cis-controls-1.7" target="_blank" rel="noopener noreferrer">1.7</a> – “Ensure IAM password policy requires at least one symbol”</li>        <li><a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cis-controls.html#securityhub-cis-controls-1.8" target="_blank" rel="noopener noreferrer">1.8</a> – “Ensure IAM password policy requires at least one number”</li>        <li><a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cis-controls.html#securityhub-cis-controls-1.9" target="_blank" rel="noopener noreferrer">1.9</a> – “Ensure IAM password policy requires a minimum length of            14 or greater”</li>        <li><a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cis-controls.html#securityhub-cis-controls-1.10" target="_blank" rel="noopener noreferrer">1.10</a> – “Ensure IAM password policy prevents password reuse”</li>        <li><a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cis-controls.html#securityhub-cis-controls-1.11" target="_blank" rel="noopener noreferrer">1.11</a> – “Ensure IAM password policy expires passwords within 90            days or less”</li>        <li><a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cis-controls.html#securityhub-cis-controls-2.2" target="_blank" rel="noopener noreferrer">2.2</a> – “Ensure CloudTrail log file validation is enabled”</li>        <li><a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cis-controls.html#securityhub-cis-controls-2.3" target="_blank" rel="noopener noreferrer">2.3</a> – “Ensure the S3 bucket CloudTrail logs to is not publicly            accessible”        </li>        <li><a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cis-controls.html#securityhub-cis-controls-2.4" target="_blank" rel="noopener noreferrer">2.4</a> – “Ensure CloudTrail trails are integrated with Amazon CloudWatch            Logs”*        </li>        <li><a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cis-controls.html#securityhub-cis-controls-2.6" target="_blank" rel="noopener noreferrer">2.6</a> – “Ensure S3 bucket access logging is enabled on the CloudTrail            S3 bucket”*</li>        <li><a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cis-controls.html#securityhub-cis-controls-2.7" target="_blank" rel="noopener noreferrer">2.7</a> – “Ensure CloudTrail logs are encrypted at rest using AWS KMS            CMKs”        </li>        <li><a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cis-controls.html#securityhub-cis-controls-2.8" target="_blank" rel="noopener noreferrer">2.8</a> – “Ensure rotation for customer created CMKs is enabled”</li>        <li><a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cis-controls.html#securityhub-cis-controls-2.9" target="_blank" rel="noopener noreferrer">2.9</a> – “Ensure VPC flow logging is enabled in all VPCs”*</li>        <li><a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cis-controls.html#securityhub-cis-controls-4.1" target="_blank" rel="noopener noreferrer">4.1</a> – “Ensure no security groups allow ingress from 0.0.0.0/0 to            port 22”</li>        <li><a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cis-controls.html#securityhub-cis-controls-4.2" target="_blank" rel="noopener noreferrer">4.2</a> – “Ensure no security groups allow ingress from 0.0.0.0/0 to            port 3389”</li>        <li><a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cis-controls.html#securityhub-cis-controls-4.3" target="_blank" rel="noopener noreferrer">4.3</a> – “Ensure the default security group of every VPC restricts            all traffic”</li>    </ul>    <p>You’ll also deploy and modify an additional playbook, “Send findings to JIRA.” You can find the high-level description of each playbook in each custom action creation script, as well as in the CloudFormation resource descriptions.</p>    <p><strong>Note</strong>: If you want to send Security Hub findings to a security information and event management tool (SIEM) such as <a href="https://aws.amazon.com/elasticsearch-service/" target="_blank" rel="noopener noreferrer">Amazon ElasticSearch Service</a>                or a third-party solution, you must change the CloudWatch Events event pattern to <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cloudwatch-events.html#securityhub-cwe-all-findings" target="_blank" rel="noopener noreferrer">match all findings</a>                and use different targets such as <a href="https://aws.amazon.com/kinesis/data-streams/?nc=sn&amp;loc=2&amp;dn=2" target="_blank" rel="noopener noreferrer">Amazon Kinesis Data Streams</a> to <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-aws-integrations.html#es-aws-integrations-fh" target="_blank" rel="noopener noreferrer">Kinesis Data Firehose</a> to load your SIEM. This process is out of scope for this post.</p></section>',
        "author": "Jonathan Rau",
        "url": "automated-blog",
        "logo": "cloudformation.png",
        "comments": [{
                "userName": "Akshay",
                "comment": "Hello"
            },
            {
                "userName": "Mike",
                "comment": "Hi"
            }
        ]
    },
    {
        "header": "Stream CDC into an Amazon S3 data lake in Parquet format with AWS DMS",
        "body": '<section class="blog-content">    <p>Most organizations generate data in real time and ever-increasing volumes. Data is captured from a variety of sources, such as transactional and reporting databases, application logs, customer-facing websites, and external feeds. Companies        want to capture, transform, and analyze this time-sensitive data to improve customer experiences, increase efficiency, and drive innovations. With increased data volume and velocity, it’s imperative to capture the data from source systems        as soon as they are generated and store them on a secure, scalable, and cost-efficient platform.</p>    <p><a href="https://aws.amazon.com/dms/" target="_blank" rel="noopener noreferrer">AWS Database Migration Service</a> (AWS DMS) performs continuous data replication using change data capture (CDC). Using CDC, you can determine and track data        that has changed and provide it as a stream of changes that a downstream application can consume and act on. Most database management systems manage a transaction log that records changes made to the database contents and metadata. AWS        DMS reads the transaction log by using engine-specific API operations and functions and captures the changes made to the database in a nonintrusive manner.</p>    <p><a href="https://aws.amazon.com/s3/" target="_blank" rel="noopener noreferrer">Amazon Simple Storage Service</a> (Amazon S3) is the largest and most performant object storage service for structured and unstructured data and the storage service        of choice to build a data lake. With Amazon S3, you can cost-effectively build and scale a data lake of any size in a secure environment where data is protected by 99.999999999% of durability.</p>    <p>AWS DMS offers many options to capture data changes from relational databases and store the data in columnar format (<a href="https://parquet.apache.org/" target="_blank" rel="noopener noreferrer">Apache Parquet</a>) into Amazon S3:</p>    <ul>        <li>AWS DMS to migrate data into Amazon S3 in Parquet format. For more information, see <a href="https://aws.amazon.com/blogs/database/announcing-the-support-of-parquet-data-format-in-aws-dms-3-1-3/" target="_blank" rel="noopener noreferrer">Announcing the support or Parquet data format in AWS DMS 3.1.3</a>.</li>        <li>Stream AWS DMS data into <a href="https://aws.amazon.com/kinesis/data-streams/" target="_blank" rel="noopener noreferrer">Amazon Kinesis Data Streams</a> and convert data into Parquet format with <a href="https://aws.amazon.com/kinesis/data-firehose/"                target="_blank" rel="noopener noreferrer">Amazon Kinesis Data Firehose</a> and store into Amazon S3.</li>    </ul>    <p>The second option helps you build a flexible data pipeline to ingest data into an Amazon S3 data lake from several relational and non-relational data sources, compared to just relational data sources support in the former option. Kinesis Data        Firehose provides pre-built <a href="http://aws.amazon.com/lambda" target="_blank" rel="noopener noreferrer">AWS Lambda</a> blueprints for converting common data sources such as Apache logs and system logs to JSON and CSV formats or writing        your own custom functions. It can also convert the format of incoming data from JSON to Parquet or <a href="https://orc.apache.org/" target="_blank" rel="noopener noreferrer">Apache ORC</a> before storing the data in Amazon S3. Data stored        in columnar format gives you faster and lower-cost queries with downstream analytics services like <a href="http://aws.amazon.com/athena" target="_blank" rel="noopener noreferrer">Amazon Athena</a>.</p>    <p>In this post, we focus on the technical challenges outlined in the second option and how to address them.</p>    <p>As shown in the following reference architecture, data is ingested from a database into Parquet format in Amazon S3 via AWS DMS integrating with Kinesis Data Streams and Kinesis Data Firehose.</p>    <p><img class="alignnone size-full wp-image-11227" style="margin: 20px 0px 20px 0px" src="https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2020/07/28/StreamCDCDataLakeParquetDMS1.png" alt="" width="800" height="404"></p>    <p>Our solution provides flexibility to ingest data from several sources using Kinesis Data Streams and Kinesis Data Firehose with built-in data format conversion and integrated data transformation capabilities before storing data in a data lake.        For more information about data ingestion into Kinesis Data Streams, see <a href="https://docs.aws.amazon.com/streams/latest/dev/building-producers.html" target="_blank" rel="noopener noreferrer">Writing Data into Amazon Kinesis Data Streams</a>.        You can then query Parquet data in Amazon S3 efficiently with Athena.</p></section>',
        "author": "Viral Shah",
        "url": "stream-blog1",
        "logo": "EC2.png",
        "comments": [{
                "userName": "Akshay",
                "comment": "Hello"
            },
            {
                "userName": "Mike",
                "comment": "Hi"
            }
        ]
    }
];

tempBlogs = JSON.parse(localStorage.getItem("blogs"));

if (tempBlogs) {
    console.log("got blogs from localStorage.");
    blogs = tempBlogs;
    console.log(blogs);
} else {
    console.log("No blogs found in localStorage.");
    localStorage.setItem("blogs", JSON.stringify(blogs));
}

var blogStr = '';
for (blog of blogs) {
    blogStr +=
        '<div class="well">' +
        '<div class="media">' +
        '<a class="pull-left" href="#">' +
        '<img class="media-object" style="height: 100px; width: 159px;  object-fit: contain" src="images/' + blog.logo + '"></a>' +
        '<div class="media-body">' +
        '<a href="blog.html?url=' + blog.url + '"><h4 class="media-heading">' + blog.header + '</h4></a>' +
        '<p class="text-right">By ' + blog.author + '</p>' +
        '<p>' + blog.body.substring(0, 412) +
        '</br><a href="blog.html?url=' + blog.url + '">Continue Reading</a>' +
        '</p>' +
        '<ul class="list-inline list-unstyled">' +
        '<li><span><i class="glyphicon glyphicon-calendar"></i> 17 October, 2020 </span></li>' +
        '<li>|</li>' +
        '<span><i class="glyphicon glyphicon-comment"></i> ' + blog.comments.length + ' comments</span>            ' +
        '<li>|</li>' +
        '<li>                <span class="glyphicon glyphicon-star"></span>                <span class="glyphicon glyphicon-star"></span>                <span class="glyphicon glyphicon-star"></span>                <span class="glyphicon glyphicon-star"></span>                <span class="glyphicon glyphicon-star-empty"></span>            </li>' +
        '<li>|</li>' +
        '<li>' +
        '<!-- Use Font Awesome http://fortawesome.github.io/Font-Awesome/ -->                <span><i class="fa fa-facebook-square"></i></span>                <span><i class="fa fa-twitter-square"></i></span>                <span><i class="fa fa-google-plus-square"></i></span>            ' +
        '</li>' +
        '</ul>' +
        '</div>' +
        '</div>' +
        '</div>';



}
document.getElementById("blogs").innerHTML = blogStr;